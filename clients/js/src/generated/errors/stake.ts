/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

/** AmountGreaterThanZero: Amount cannot be greater than zero */
export const STAKE_ERROR__AMOUNT_GREATER_THAN_ZERO = 0x0; // 0
/** InvalidTokenOwner: Invalid token owner */
export const STAKE_ERROR__INVALID_TOKEN_OWNER = 0x1; // 1

export type StakeError =
  | typeof STAKE_ERROR__AMOUNT_GREATER_THAN_ZERO
  | typeof STAKE_ERROR__INVALID_TOKEN_OWNER;

let stakeErrorMessages: Record<StakeError, string> | undefined;
if (__DEV__) {
  stakeErrorMessages = {
    [STAKE_ERROR__AMOUNT_GREATER_THAN_ZERO]: `Amount cannot be greater than zero`,
    [STAKE_ERROR__INVALID_TOKEN_OWNER]: `Invalid token owner`,
  };
}

export function getStakeErrorMessage(code: StakeError): string {
  if (__DEV__) {
    return (stakeErrorMessages as Record<StakeError, string>)[code];
  }

  return 'Error message not available in production bundles. Compile with `__DEV__` set to true to see more information.';
}
